/*~~~~~~~  Typography  ~~~~~~~*/
@import url("https://fonts.googleapis.com/css2?family=Gabriela&family=Roboto+Slab:wght@100;200;300;400;500;600;700;800;900&display=swap");
body {
  font-family: Gabriela;
  font-weight: 400;
  font-size: 1.6rem;
  /* For accessibility - The WCAG criteria states that line-height should be at least 1.5*/
  /* The WCAG criteria is meant for "body" text, not headings.*/
  /* So we can calculate the proper line height for all elements :*/
  /* Instead of calculating the line height by multiplying the font-size with a number like 1.5, */
  /* this alternative uses the font-size as a base, and adds a fixed amount of space to each line. */
  line-height: calc(1em + 0.7rem);
  color: #751c00;
}

.titleWrapper {
  width: 60%;
  height: 100%;
  max-width: 1140px;
  padding-left: 2rem;
}
@media only screen and (min-width: 75em) {
  .titleWrapper {
    width: 50%;
  }
}

.headingTitle {
  max-width: 100%;
  margin-right: auto;
  margin-left: auto;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
@media only screen and (min-width: 75em) {
  .headingTitle {
    max-width: 50%;
  }
}
.headingCollection {
  font-size: 3.2rem;
  font-weight: 300;
  line-height: 1.5;
  color: #000000;
  text-transform: uppercase;
  margin-bottom: 0.5rem;
}
@media only screen and (min-width: 75em) {
  .headingCollection {
    font-size: 3.1rem;
  }
}
@media only screen and (min-width: 65.625em) {
  .headingCollection {
    font-size: 3.5rem;
  }
}
@media only screen and (min-width: 90em) {
  .headingCollection {
    font-size: 3.3rem;
  }
}
@media only screen and (min-width: 78.125em) {
  .headingCollection {
    font-size: 3.5rem;
  }
}

.small {
  font-size: 1rem;
}

.muted {
  color: #808080;
}

ul.errorlist > li {
  list-style: none;
  color: #e84610;
}

/*===== END  Typography  =====*/
/*~~~~~~~  Reset  ~~~~~~~*/
/*	Josh's Custom CSS Reset
 * https://www.joshwcomeau.com/css/custom-css-reset */
*, *::before, *::after {
  box-sizing: inherit;
  text-decoration: none;
  padding: 0;
  margin: 0;
}

/* The height of an element is calculated based on its CHILDREN.
 * So setting height: 100% on an element will cause it to be 100% of the child's height.
 * This setting causes the height to be calculated from the parent*/
html, body {
  height: 100%;
}

body {
  /* MacOS browsers like Chrome and Safari still use subpixel antialiasing by default.*/
  /* We need to explicitly turn it off.*/
  -webkit-font-smoothing: antialiased;
}

img, picture, video, canvas, svg {
  /* Using "display: block" on these elements would remove extra space from under it
  * - Use flexbox on its parent instead */
  /* Keep large images from overflowing, if theyre placed in a container that isnt wide enough to contain them. */
  max-width: 100%;
}

/* by default, buttons and inputs don't inherit typographical styles from their parents. */
/* Instead, they have their own weird styles. */
/* Form inputs shouldn't have their own typographical styles! */
input, button, textarea, select {
  font: inherit;
}

/* The overflow-wrap property lets us tweak the line-wrapping algorithm, */
/* and give it permission to use hard wraps when no soft wrap opportunties can be found */
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

/*===== END  Reset  =====*/
html {
  /* Since browser default font-size is 16px*/
  /* Set it to 10px (on a desktop) to make converting px to rem easier. */
  /* Use a percentage so that if a user changes the font size */
  /* on their browser or zooms the font sizes,  */
  /* paddings and margins adjust accordingly. */
  /* This defines what 1rem is */
  /* For mobile 1st design we will use 8px for the mobile device */
  font-size: 50%;
}
@media only screen and (min-width: 50em) {
  html {
    font-size: 56.25%;
  }
}
@media only screen and (min-width: 75em) {
  html {
    font-size: 62.5%;
  }
}
@media only screen and (min-width: 90em) {
  html {
    font-size: 75%;
  }
}

body {
  /* Inheritable properties*/
  box-sizing: border-box;
  /* Set up page for sticky footer*/
  display: flex;
  flex-direction: column;
  font-size: 1.6rem;
  /* Mobile devices do not honour the "vh" property properly */
  /* So setting the view height to less than 100 for mobile devices */
  min-height: 92vh;
  /* Non-inheritable properties */
  padding: 0;
  background-color: #ffece5;
}
@media only screen and (min-width: 75em) {
  body {
    min-height: 100vh;
  }
}

/*~~~~~~~  Utilities  ~~~~~~~*/
.centreText {
  text-align: center;
}

.marginBottomSmall {
  margin-bottom: 1.5rem;
}
.marginBottomMedium {
  /* Mobile first - so smaller values first */
  margin-bottom: 3rem;
}
@media only screen and (min-width: 50em) {
  .marginBottomMedium {
    margin-bottom: 4rem;
  }
}
.marginBottomBig {
  margin-bottom: 5rem;
}
@media only screen and (min-width: 50em) {
  .marginBottomBig {
    margin-bottom: 8rem;
  }
}

.marginTopSmall {
  margin-top: 1.5rem;
}
.marginTopMedium {
  margin-top: 4rem;
}
.marginTopBig {
  margin-top: 8rem;
}
.marginTopHuge {
  margin-top: 10rem;
}

.invisible {
  display: none;
}

/*===== END  Utilities  =====*/
/*~~~~~~~  Navbar  ~~~~~~~*/
#navigationNav {
  /*	Setting the "position" property allows us to use z-index */
  position: fixed;
  /*	NO top value will centre the menu vertically on mobile screens */
  left: 0;
  z-index: 15;
  /*Hide the navigation initially*/
  opacity: 0;
  /*It is not enough to have an opacity of zero*/
  /*The elements are still there and are clickable
  * Need to set the width to zero as well
  * the menu elements are hidden but on the left edge of the screen & clickable
  * Need to move the menu off screen completely, so none of the menus are clickable */
  width: 0;
  transform: translateX(-300px);
  transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}
@media only screen and (min-width: 59.375em) {
  #navigationNav {
    background-color: #ffcdbd;
    width: 100%;
    height: auto;
    opacity: 1;
    position: relative;
    top: 0;
    /*	In the mobile version the menu is initially push off the screen
    * This is not done on the desktop version - so have to translate to position 0 */
    transform: translateX(0);
  }
}

#naviToggle {
  display: none;
}

.navigationButton {
  display: inline;
  background-color: #FFFFFF;
  /*Make this slightly larger than the navigationBackground, to be sure to cover it*/
  width: 6.5rem;
  height: 6.5rem;
  border-radius: 50%;
  position: fixed;
  top: 1rem;
  right: 0.5rem;
  z-index: 2000;
  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);
  /* Align the "hamburger" icon horizontally */
  text-align: center;
  cursor: pointer;
}
@media only screen and (min-width: 59.375em) {
  .navigationButton {
    display: none;
  }
}
.navigationBackground {
  /*Coloured background for the navigation*/
  /*It will start as a small circle behind the white circle containing the "hamburger" icon*/
  /*It will expand to fill the screen when the "hamburger" icon is clicked*/
  display: block;
  width: 5.5rem;
  height: 5.5rem;
  border-radius: 50%;
  /*Stays in the same position even if we scroll down the page*/
  position: fixed;
  top: 1.5rem;
  right: 1rem;
  background-image: radial-gradient(#ffcdbd, #ffb299);
  z-index: 10;
  /*Custom transition function, uses a cubic bezier curve for ease-in and ease-out*/
  /*See easings.net & cubic-bezier.com*/
  transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);
}
@media only screen and (min-width: 59.375em) {
  .navigationBackground {
    display: none;
  }
}
.navigationList {
  list-style: none;
  text-align: center;
  display: flex;
  flex-direction: row;
  margin-top: 10rem;
  margin-right: auto;
  margin-left: auto;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
@media only screen and (min-width: 59.375em) {
  .navigationList {
    margin: 0;
    flex-direction: row;
  }
}
.navigationLink {
  transform: translateX(-200px);
}
.navigationLink:link, .navigationLink:visited {
  display: inline-block;
  font-size: 3rem;
  font-weight: 300;
  padding: 1rem 2rem;
  color: #191970;
  text-decoration: none;
  text-transform: uppercase;
  background-image: linear-gradient(120deg, transparent 0%, transparent 50%, #b299ff 50%);
  /*Increasing the background shoves the RHS of the linear gradient off the element, so it is invisible*/
  background-size: 235%;
  transition: all 0.4s;
}
@media only screen and (min-width: 59.375em) {
  .navigationLink:link, .navigationLink:visited {
    font-size: 1.8rem;
    transform: none;
  }
}
.navigationLink:hover, .navigationLink:active {
  background-position: 100%;
  color: #ffcdbd;
  transform: translateX(1rem);
}
.navigationItem {
  margin: 1rem;
  /*Hide the navigation list item initially*/
  width: 0;
}
@media only screen and (min-width: 59.375em) {
  .navigationItem {
    width: initial;
  }
}
.navigationCheckbox:checked ~ .navigationBackground {
  transform: scale(80);
}
.navigationCheckbox:checked ~ #navigationNav {
  /*	When the 'hamburger' menu is clicked
  * 1) Make the menu full width */
  width: 100%;
  /*	2) Show the menu */
  opacity: 1;
  /*	3) The menu is initially shoved off the edge of the viewport
  * Need to move it back into the middle */
  transform: translateX(0);
}
.navigationIcon {
  display: inline-block;
  position: relative;
  margin-top: 3.5rem;
  color: #FFFFFF;
  /*A bar before the span, the span is a bar, a bar after the span*/
  /*Each bar is 3rem x 2px and is coloured dark grey*/
  /*For ::before and ::after to show they need content and display properties to be set*/
}
.navigationIcon, .navigationIcon::before, .navigationIcon::after {
  width: 3rem;
  /*Always stays the same height, no matter what the base font size is*/
  height: 2px;
  background-color: #333333;
  display: inline-block;
}
.navigationIcon::before, .navigationIcon::after {
  content: "";
  position: absolute;
  left: 0;
  transition: all 0.2s;
}
.navigationIcon::before {
  top: -0.8rem;
  /*By default elements will rotate around the centre.*/
  /*If you want to rotate around the edge you can set the transform-origin*/
  /*transform-origin: right*/
}
.navigationIcon::after {
  top: 0.8rem;
  /*transform-origin: left*/
}
@media only screen and (min-width: 59.375em) {
  .navigationIcon {
    display: none;
  }
}
.navigationButton:hover .navigationIcon::before {
  top: -1rem;
}
.navigationButton:hover .navigationIcon::after {
  top: 1rem;
}
.navigationCheckbox:checked + .navigationButton > .navigationIcon {
  /*When the button is clicked change the "hamburger" to a cross*/
  /*When the checkbox is selected - get its adjacent sibling and */
  /*select the child element of the adjacent sibling*/
  /*Step 1 make the middle bar invisible (this is the span in the navigationIcon)*/
  background-color: transparent;
}
.navigationCheckbox:checked + .navigationButton > .navigationIcon::before {
  /*Step 2 make the top bar rotate (this is the navigationIcon::before)*/
  /*Rotate 180 degrees - 45 degrees : Takes longer, so looks better*/
  transform: rotate(135deg);
  top: 0;
}
.navigationCheckbox:checked + .navigationButton > .navigationIcon::after {
  /*Step 3 make the bottom bar rotate (this is the navigationIcon::after)*/
  /*Rotate 180 degrees - 45 degrees : Takes longer, so looks better*/
  transform: rotate(-135deg);
  top: 0;
}
.navigationActive {
  background-color: #99ffb2;
}
.navigation.navigationActive {
  background-color: #99ffb2;
}

.nonMobile {
  display: none;
}
@media only screen and (min-width: 59.375em) {
  .nonMobile {
    display: initial;
  }
}

@media only screen and (min-width: 59.375em) {
  .mobileOnly {
    display: none;
  }
}

.navList {
  list-style: none;
  text-align: center;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  margin-right: 8rem;
  padding-top: 1rem;
}
@media only screen and (min-width: 59.375em) {
  .navList {
    margin-right: 0;
  }
}

.logoImage {
  width: 15rem;
  height: auto;
}

/*===== END  Navbar  =====*/
/*~~~~~~~  Footer  ~~~~~~~*/
footer {
  /*Sticky footer*/
  margin-top: auto;
}

.footer {
  background-color: #ffcdbd;
  padding: 4rem 0 2rem 0;
  font-size: 1.4rem;
  font-family: "Roboto Slab", "Helvetica Neue", sans-serif;
  color: #751c00;
}
@media only screen and (min-width: 37.5em) {
  .footer {
    font-size: 1.8rem;
  }
}
@media only screen and (min-width: 37.5em) {
  .footer {
    font-size: 2rem;
  }
}
.footerLogoBox {
  text-align: center;
  margin-bottom: 4rem;
}
.footerLogo {
  width: 15rem;
  height: auto;
}
.footerRow {
  display: flex;
  flex-direction: column;
  max-width: 114rem;
  margin: 0 auto;
}
@media only screen and (min-width: 59.375em) {
  .footerRow {
    flex-direction: row;
  }
}
.footerBlock {
  display: flex;
  justify-content: center;
}
.footerBlock:first-child {
  margin-bottom: 2rem;
}
@media only screen and (min-width: 59.375em) {
  .footerBlock {
    flex-direction: row;
    width: calc((100% - 7.5rem) / 2);
  }
  .footerBlock:first-child {
    margin-right: 7.5rem;
  }
  .footerBlock:last-child {
    justify-content: flex-end;
  }
}
.footerNavigation {
  border-top: 1px solid #333333;
  padding-top: 2rem;
  /*This works because 'inline-block' does not occupy the full width.*/
  /*It only occupies the width of the elements in its container.*/
  display: inline-block;
}
.footerList {
  list-style: none;
  display: flex;
  flex-direction: column;
}
@media only screen and (min-width: 59.375em) {
  .footerList {
    flex-direction: row;
  }
}
.footerItem {
  display: inline-block;
}
.footerItem:not(:last-child) {
  margin-right: 1.5rem;
  margin-bottom: 0.5rem;
}
@media only screen and (min-width: 59.375em) {
  .footerItem:not(:last-child) {
    margin-bottom: 0;
  }
}
.footerLink:link, .footerLink:visited {
  color: #b299ff;
  background-color: #751c00;
  text-decoration: none;
  text-transform: uppercase;
  display: inline-block;
  padding: 1rem 3px;
  transition: all 0.2s;
}
.footerLink:hover, .footerLink:active {
  color: #ffb299;
  box-shadow: 0 1rem 2rem rgba(153, 255, 178, 0.4);
  transform: rotate(5deg) scale(1.3);
}
.footerCopyright {
  border-top: 1px solid #333333;
  padding-top: 2rem;
  /*This works because 'inline-block' does not occupy the full width.*/
  /*It only occupies the width of the elements in its container.*/
  display: inline-block;
  line-height: 2.2rem;
}
.footerCopyright .copy {
  /* Make inline-block so we can set top margins */
  display: inline-block;
  margin-top: 2rem;
}
.footerCopyright a:first-of-type {
  border-bottom: 3px solid #ffcdbd;
}

/*===== END  Footer  =====*/
/*~~~~~~~  Header  ~~~~~~~*/
.headerNav {
  display: flex;
  flex-direction: row;
  /* Not enough space to display all items in one row so wrap them */
  flex-wrap: wrap;
  /*	Margin to give space for the hamburger button */
  margin-right: 4rem;
  /* Need the element to be positioned for z-index to work */
  position: relative;
  z-index: 20;
}
@media only screen and (min-width: 37.5em) {
  .headerNav {
    /* All items will fit on one row so no need to wrap */
    flex-wrap: nowrap;
  }
}
.headerNavLogo {
  margin-right: auto;
}

.shopAccounts {
  display: flex;
  flex-direction: row;
  list-style: none;
  /* Minimum margin to keep 'My Profile' & Cart on the top row */
  margin-right: 3rem;
}
@media only screen and (min-width: 59.375em) {
  .shopAccounts {
    margin-right: 0;
  }
}
.shopAccountsIcon {
  font-size: 2rem;
  margin-bottom: 0.5rem;
  margin-top: 1.3rem;
}
.shopAccountsBlock .shopAccountsLabel {
  /*	Need both classes to increase the specifity
  * to over-ride the text sizing from ".mainMenu a" */
  font-size: 1.8rem;
  /*	Match the padding from the menu a for "My Profile" */
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.shopAccountsBlock {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}

#cartIcon {
  color: #191970;
}

/*===== END  Header  =====*/
/*~~~~~~~  Grid  ~~~~~~~*/
.messageContainer {
  z-index: 9999;
}

[class^=container], [class$=Container] {
  margin: 1rem auto;
  width: 80%;
}
[class^=container] > hr, [class$=Container] > hr {
  margin: 1.2rem auto;
}
@media only screen and (min-width: 59.375em) {
  [class^=container] > hr, [class$=Container] > hr {
    margin: 1.5rem auto;
  }
}
@media only screen and (min-width: 75em) {
  [class^=container] > hr, [class$=Container] > hr {
    margin: 1.7rem auto;
  }
}
@media only screen and (min-width: 90em) {
  [class^=container] > hr, [class$=Container] > hr {
    margin: 2rem auto;
  }
}
[class^=container] h1, [class$=Container] h1 {
  text-align: center;
}

/*===== END  Grid  =====*/
/*~~~~~~~  Home Page  ~~~~~~~*/
.homePage {
  background-image: url(../images/occupational-therapist-playing-with-child-small.jpg);
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  height: calc(100vh - 130px);
  position: relative;
  text-align: center;
  display: flex;
  align-items: center;
  flex-direction: column;
}
@media only screen and (min-width: 59.375em) {
  .homePage {
    background-image: url(../images/occupational-therapist-playing-with-child.jpg);
  }
}
.homeTitle {
  position: absolute;
  top: 5rem;
  text-shadow: 2px 2px #ffb299;
  font-size: 2.5rem;
  line-height: 2.7rem;
}
@media only screen and (min-width: 22.5em) {
  .homeTitle {
    top: 8rem;
  }
}
@media only screen and (min-width: 25em) {
  .homeTitle {
    top: 11rem;
    font-size: 3rem;
  }
}
@media only screen and (min-width: 37.5em) {
  .homeTitle {
    font-size: 3.5rem;
    top: 15rem;
  }
}
@media only screen and (min-width: 50em) {
  .homeTitle {
    font-size: 4.5rem;
    line-height: 4.7rem;
    top: 17rem;
  }
}
@media only screen and (min-width: 59.375em) {
  .homeTitle {
    top: 4rem;
    font-size: 3.3rem;
    line-height: 3.7rem;
  }
}
.homeButton {
  position: absolute;
  bottom: 8rem;
}
.homeButton a {
  font-size: 1.25rem;
}
@media only screen and (min-width: 22.5em) {
  .homeButton {
    bottom: 11rem;
  }
}
@media only screen and (min-width: 25em) {
  .homeButton {
    bottom: 14rem;
  }
  .homeButton a {
    font-size: 2rem;
  }
}
@media only screen and (min-width: 37.5em) {
  .homeButton {
    bottom: 18rem;
  }
  .homeButton a {
    font-size: 2.7rem;
  }
}
@media only screen and (min-width: 50em) {
  .homeButton {
    bottom: 25rem;
  }
  .homeButton a {
    font-size: 3.4rem;
  }
}
@media only screen and (min-width: 59.375em) {
  .homeButton {
    bottom: 5rem;
  }
}

/*===== END  Home Page  =====*/
/*~~~~~~~  Therapies Page  ~~~~~~~*/
.therapyTitle {
  text-align: center;
  margin-top: 1rem;
}
.therapyTitle h1 {
  margin-top: 3rem;
  font-size: 3rem;
  font-weight: 500;
  text-transform: uppercase;
  margin-bottom: 2.5rem;
}
.therapyTitle hr {
  width: 50%;
  margin: 1.5rem auto 0 auto;
}
.therapyContainer {
  width: 80%;
  margin-left: auto;
  margin-right: auto;
}
@media only screen and (min-width: 32.25em) {
  .therapyContainer {
    width: 100%;
  }
}
@media only screen and (min-width: 33.9375em) {
  .therapyContainer {
    width: 95%;
  }
}
@media only screen and (min-width: 40.3125em) {
  .therapyContainer {
    width: 80%;
  }
}
@media only screen and (min-width: 48.875em) {
  .therapyContainer {
    width: 100%;
  }
}
@media only screen and (min-width: 51.75em) {
  .therapyContainer {
    width: 95%;
  }
}
@media only screen and (min-width: 61.4375em) {
  .therapyContainer {
    width: 80%;
  }
}
@media only screen and (min-width: 68.75em) {
  .therapyContainer {
    width: 96%;
  }
}
@media only screen and (min-width: 82.8125em) {
  .therapyContainer {
    width: 80%;
  }
}
@media only screen and (min-width: 90.625em) {
  .therapyContainer {
    width: 95%;
  }
}
@media only screen and (min-width: 105.1875em) {
  .therapyContainer {
    width: 80%;
  }
}
.therapyList {
  display: flex;
  flex-wrap: wrap;
  /* External & Internal border padding */
  column-gap: 2rem;
  row-gap: 2rem;
  padding-top: 2rem;
  padding-bottom: 2rem;
}

/*===== END  Therapies Page  =====*/
/*~~~~~~~  Single Therapy Page  ~~~~~~~*/
.therapyWrapper {
  padding: 2rem 1rem;
}
@media only screen and (min-width: 75em) {
  .therapyWrapper {
    display: flex;
    flex-direction: row;
  }
}
@media only screen and (min-width: 75em) {
  .therapyImageWrapper {
    width: 50%;
    margin-right: 2rem;
  }
}
@incude respond(XL) {
  .therapyImageWrapper {
    margin-top: 5rem;
    margin-bottom: 5rem;
  }
}
.therapyImageWrapper img {
  max-height: 43rem;
}
.therapyDetails {
  margin-top: 1rem;
}
@media only screen and (min-width: 75em) {
  .therapyDetails {
    width: 50%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
}
@incude respond(XL) {
  .therapyDetails {
    width: 33%;
    margin-left: 15%;
  }
}
.therapyDetailsDescription {
  margin-top: 0.5rem;
}
.therapyDetailsBody p {
  margin-top: 0.75rem;
}
.therapyDetailsPrice {
  font-size: 2.5rem;
  font-weight: 700;
}
.therapyDetailsLabel {
  font-weight: 700;
}
.therapyDetailsSessions {
  margin-top: 1rem;
}
.therapyDetailsFooter {
  margin-top: 1rem;
  font-size: 1.6rem;
}
.therapyDetailsFooter p {
  margin-top: 0.75rem;
}

p.therapyDetailsPrice {
  margin-top: 1.25rem;
}

.shopButtons {
  margin-top: 1.2rem;
}

/*===== END  Single Therapy Page  =====*/
/*~~~~~~~  Bookings Page  ~~~~~~~*/
.containerBookings {
  width: 100%;
  padding: 0 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}
@media only screen and (min-width: 75em) {
  .containerBookings {
    max-width: 80%;
    margin-left: auto;
    margin-right: auto;
  }
}
.containerBookings hr {
  margin: 1.25rem 0;
  width: 65%;
}
@media only screen and (min-width: 37.5em) {
  .containerBookings hr {
    width: 50%;
  }
}
.containerBookings .sessionsInput {
  width: 33%;
}

#bookingsGrandTotal {
  font-weight: 700;
  font-size: 3rem;
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.bookingsTitle {
  text-transform: uppercase;
  font-size: 2.75rem;
}
.bookingsItems {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 1rem;
}
.bookingsItems p {
  font-size: 1.75rem;
  font-weight: 300;
  margin-bottom: 1rem;
}
@media only screen and (min-width: 50em) {
  .bookingsItems {
    width: 100%;
    flex-direction: column-reverse;
  }
  .bookingsItems picture img {
    max-height: 50vh;
    object-fit: contain;
  }
}
@media only screen and (min-width: 75em) {
  .bookingsTotals {
    align-self: flex-end;
  }
}
.bookingsTotals p {
  margin-bottom: 1rem;
  font-size: 2rem;
}
.bookingsButtons a {
  font-size: 1.3rem;
  padding: 0.75rem 1.3rem;
  margin-right: 0;
}
.bookingsSummary {
  color: #808080;
  font-size: 1.8rem;
  margin-top: 1rem;
  margin-bottom: 5rem;
}
@media only screen and (min-width: 50em) {
  .bookingsSummary {
    display: none;
  }
}
.bookingsTherapies p {
  font-size: 2rem;
}
@media only screen and (min-width: 75em) {
  .bookingsTherapies p {
    font-size: 1.6rem;
  }
}
@media only screen and (min-width: 59.375em) {
  .bookingsTherapies {
    width: 100%;
  }
}
.bookingsTherapy {
  display: flex;
  flex-direction: column;
  width: 100%;
}
@media only screen and (min-width: 50em) {
  .bookingsTherapy {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }
}
@media only screen and (min-width: 50em) {
  .bookingsTherapyDetail {
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
    flex: 4;
  }
}
.bookingsTherapyDescription {
  text-transform: uppercase;
}
.bookingsTherapyPrice {
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}
.bookingsTherapyPrice p::before {
  content: "Per Session :  ";
}
@media only screen and (min-width: 50em) {
  .bookingsTherapyPrice p::before {
    content: "";
  }
}
@media only screen and (min-width: 50em) {
  .bookingsTherapyPrice {
    margin-top: 0;
    flex: 1;
    text-align: center;
  }
}
@media only screen and (min-width: 50em) {
  .bookingsTherapySessions {
    flex: 1;
    text-align: center;
  }
}
@media only screen and (min-width: 50em) {
  .bookingsTherapySubtotal {
    flex: 1;
  }
}
.bookingsTherapyImage {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
}
.bookingsTherapySubtotal p {
  font-weight: 700;
}
.bookingsTherapySubtotal p::before {
  content: "Subtotal :  ";
}
@media only screen and (min-width: 50em) {
  .bookingsTherapySubtotal p::before {
    content: "";
  }
}
@media only screen and (min-width: 50em) {
  .bookingsTherapySubtotal {
    order: 2;
    text-align: right;
  }
}
.bookingsTherapySessions {
  margin-top: 2rem;
  margin-bottom: 2rem;
}
@media only screen and (min-width: 75em) {
  .bookingsTherapySessions {
    margin: 0 1rem;
  }
}
.bookingsTherapyTitles {
  display: none;
}
@media only screen and (min-width: 75em) {
  .bookingsTherapyTitles {
    display: flex;
    flex-direction: row;
    font-weight: 700;
    justify-content: space-between;
  }
}
.bookingsTherapyTitlesInfo {
  flex: 4;
}
@media only screen and (min-width: 50em) {
  .bookingsTherapyTitlesPrice {
    flex: 1;
    text-align: center;
  }
}
@media only screen and (min-width: 50em) {
  .bookingsTherapyTitlesSessions {
    flex: 1;
    text-align: center;
  }
}
@media only screen and (min-width: 50em) {
  .bookingsTherapyTitlesSubtotal {
    flex: 1;
    text-align: right;
  }
}

.editLinks {
  display: flex;
  justify-content: space-between;
  margin-top: 2rem;
  width: 60%;
}
.editLinks a {
  font-size: 2rem;
  cursor: pointer;
}
@media only screen and (min-width: 50em) {
  .editLinks {
    flex-direction: column;
    width: 100%;
    align-items: center;
  }
}

.updateLink {
  color: #191970;
  display: none;
}
@media only screen and (min-width: 50em) {
  .updateLink {
    margin-bottom: 1.5rem;
  }
}

.removeLink {
  color: #e84610;
}

/*===== END  Bookings Page  =====*/
/*~~~~~~~  Purchase  ~~~~~~~*/
.containerPurchase {
  max-width: 95%;
  margin: 0 auto;
}
@media only screen and (min-width: 37.5em) {
  .containerPurchase {
    max-width: 80%;
  }
}
.containerPurchase .purchaseTitle {
  margin-bottom: 2rem;
  text-transform: uppercase;
  text-align: center;
}
.containerPurchase > hr {
  margin-top: 1.2rem;
  margin-bottom: 1.2rem;
}

.purchase {
  flex: 1 1 50%;
  width: 100%;
}
@media only screen and (min-width: 75em) {
  .purchase {
    width: 50%;
  }
}
.purchase p:first-child {
  color: #808080;
  margin-bottom: 1.3rem;
}
.purchaseOrder {
  display: flex;
  flex-direction: column;
}
@media only screen and (min-width: 75em) {
  .purchaseOrder {
    flex-direction: row-reverse;
  }
}
.purchaseOrder .orderSummary {
  flex: 1 1 50%;
  display: flex;
  flex-direction: column;
  margin-bottom: 1.5rem;
}
.purchaseOrder .orderSummary hr {
  margin: 0;
}
.purchaseOrder .orderTitles {
  margin-bottom: 1rem;
  align-self: flex-end;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  width: 85%;
}
.purchaseOrder .orderTitles p {
  margin-bottom: 0.33rem;
  margin-top: 0;
  text-align: center;
  color: #333333;
}
.purchaseOrder .orderItem {
  flex: 1 1 60%;
}
.purchaseOrder .orderSubtotal {
  flex: 1 1 25%;
  text-align: right;
}
.purchaseOrder .orderContent {
  display: flex;
  flex-wrap: wrap;
}
.purchaseOrder .orderImage {
  flex: 1 1 30%;
}
.purchaseOrder .orderImage img {
  width: 100%;
}
.purchaseOrder .orderDetails {
  flex: 1 1 50%;
  text-align: center;
}
.purchaseOrder .orderDetails p {
  margin-top: 0;
  margin-bottom: 0;
}
.purchaseOrder .orderPrice {
  flex: 1 1 20%;
  text-align: right;
}
.purchaseOrder .orderPrice p {
  margin-top: 0;
  margin-bottom: 0;
}
.purchaseOrder .orderTotals {
  display: flex;
  flex-wrap: wrap;
  text-align: right;
}
.purchaseOrder .orderTotals p {
  margin-top: 0;
  margin-bottom: 0;
}
.purchaseOrder .orderTotalsTitles {
  flex: 1 1 60%;
}
.purchaseOrder .orderTotalsCosts {
  flex: 1 1 25%;
  margin-left: auto;
}

#stripeError {
  color: #e84610;
}

.payButtons {
  margin-top: 4rem;
  margin-bottom: 0.65rem;
  font-size: 1.6rem;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.payButtons span {
  text-transform: none;
}
.payButtons a:first-child {
  margin: 0;
}
.payButtons p {
  margin-top: 0.5rem;
  margin-bottom: 0;
  color: #e84610;
}
.payButtons + div {
  color: #e84610;
  text-align: right;
}

#submitButton {
  margin-right: 0;
  font-weight: 700;
}

#paymentForm fieldset {
  padding: 0 1.3rem;
  margin-bottom: 4rem;
  border: none;
}
#paymentForm fieldset:last-child > div {
  margin-bottom: 1.3rem;
}
#paymentForm .fieldsetLabel {
  position: relative;
  right: 0.7rem;
  padding: 0 1.3rem;
}
#paymentForm .formCheck {
  display: flex;
  justify-content: flex-end;
}
#paymentForm .formCheckLabel {
  margin-bottom: 0;
  margin-top: 1.5rem;
  margin-right: 1rem;
}
#paymentForm .formCheckLabel a {
  color: #191970;
}

#loadingOverlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(153, 255, 178, 0.9);
  z-index: 9999;
}

.loadingSpinner {
  display: flex;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  margin: 0;
  height: 100%;
  color: #b299ff;
}

/*===== END  Purchase  =====*/
/*~~~~~~~  Purchase Success Page ~~~~~~~*/
.containerPurchaseSuccess hr {
  margin: 1rem auto;
  max-width: 70%;
}
@media only screen and (min-width: 37.5em) {
  .containerPurchaseSuccess hr {
    max-width: 50%;
  }
}
@media only screen and (min-width: 50em) {
  .containerPurchaseSuccess hr {
    max-width: 40%;
  }
}
@media only screen and (min-width: 59.375em) {
  .containerPurchaseSuccess hr {
    max-width: 30%;
  }
}
.containerPurchaseSuccess > p {
  text-align: center;
  font-size: 2rem;
}

.purchaseSuccess {
  margin-top: 2rem;
  width: 100%;
}
@media only screen and (min-width: 75em) {
  .purchaseSuccess {
    width: 60%;
    margin-right: auto;
  }
}
.purchaseSuccessTitle {
  text-transform: uppercase;
  margin-top: 1.3rem;
  text-align: center;
}
.purchaseSuccessTitle ~ p {
  padding: 0.5rem 1rem;
}
.purchaseSuccessButtons {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  margin-bottom: 2rem;
}

.orderConfirmationWrapper {
  max-width: 90%;
  padding: 1rem;
  border: 1px solid #808080;
  margin: 1.3rem auto;
}
@media only screen and (min-width: 37.5em) {
  .orderConfirmationWrapper {
    max-width: 80%;
  }
}
@media only screen and (min-width: 50em) {
  .orderConfirmationWrapper {
    max-width: 70%;
  }
}
@media only screen and (min-width: 59.375em) {
  .orderConfirmationWrapper {
    max-width: 60%;
  }
}
@media only screen and (min-width: 75em) {
  .orderConfirmationWrapper {
    max-width: 50%;
  }
}
.orderConfirmationInfo:not(:first-of-type) {
  /*	Add space above all  but the first orderConfirmationInfo element */
}
.orderConfirmationInfo:not(:first-of-type) h2 {
  margin-top: 1.6rem;
}
.orderConfirmationRow {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
}
@media only screen and (min-width: 25em) {
  .orderConfirmationRow {
    flex-direction: row;
  }
}
.orderConfirmationRow > p {
  margin-bottom: 0;
  padding-left: 1.2rem;
}
.orderConfirmationRow > p:first-child {
  flex: 3;
  font-weight: 700;
  font-size: 2rem;
}
@media only screen and (min-width: 37.5em) {
  .orderConfirmationRow > p:first-child {
    flex: 1;
  }
}
.orderConfirmationRow > p:not(:first-child) {
  flex: 7;
  text-align: left;
  color: #191970;
  font-size: 2rem;
}
@media only screen and (min-width: 37.5em) {
  .orderConfirmationRow > p:not(:first-child) {
    flex: 2;
  }
}
.orderConfirmationNumber {
  font-weight: 700;
}

/*===== END  Purchase Success Page =====*/
/*~~~~~~~  User Profile  ~~~~~~~*/
.containerProfile {
  width: 90%;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 1.5rem auto;
}

.profileHead hr {
  margin: 1rem 0;
}
.profileWrapper {
  display: flex;
  flex-direction: column;
  padding: 1rem 0;
}
@media only screen and (min-width: 59.375em) {
  .profileWrapper {
    width: 100%;
    flex-direction: row;
  }
}
.profileTitle {
  text-align: center;
}
.profileHeading {
  text-align: center;
  font-size: 2rem;
  color: #808080;
  margin-bottom: 3rem;
}
.profileDetails {
  flex: 1 1 50%;
}
.profileDetailsForm {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  margin-top: 1.3rem;
}
.profileDetailsForm .formInput {
  width: 100%;
}
.profileDetailsButton {
  margin-left: auto;
  align-self: flex-end;
  text-transform: uppercase;
  margin-top: 1rem;
}
.profileOrders {
  flex: 1 1 50%;
  margin-top: 2rem;
}
@media only screen and (min-width: 59.375em) {
  .profileOrders {
    margin-left: 10%;
    margin-top: 0;
  }
}
.profileOrdersTable tr:nth-child(odd) {
  background-color: #ffb299;
}
.profileOrdersTable tr:nth-child(even) {
  background-color: #ffcdbd;
}
.profileOrdersTable .tableHead > tr {
  background-color: #751c00;
  color: #b299ff;
}
.profileOrdersTable td:last-child {
  text-align: right;
}
@media only screen and (min-width: 59.375em) {
  .profileOrdersTable {
    margin-top: 5rem;
  }
}
.profileFormInput {
  color: #000000;
  width: 100%;
  margin-bottom: 1rem;
  padding: 0.5rem 1rem;
}
.profileFormInputinput::placeholder {
  color: #aab7c4;
}

/*===== END  User Profile  =====*/
/*~~~~~~~  Add Therapy Page  ~~~~~~~*/
.containerAddTherapy {
  display: flex;
  flex-direction: column;
  padding: 1rem 2rem;
}
@media only screen and (min-width: 75em) {
  .containerAddTherapy {
    width: 50%;
    margin: 0 auto;
  }
}

.addTherapyHeader {
  text-align: center;
  flex: 1 1 50%;
  padding: 0 1.3rem;
}
.addTherapyHeader > hr {
  margin-top: 1.2rem;
  margin-bottom: 1.2rem;
}
.addTherapyBody {
  flex: 1 1 50%;
}
.addTherapyBody form {
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
  /* Since Django refuses to apply a class to its form elements
  * will have to manually force them here.
  * Have to copy .formInput styles into here */
}
.addTherapyBody form input, .addTherapyBody form select, .addTherapyBody form textarea {
  /*Always when padding an element give it a bit more on the sides to look better*/
  padding: 1.5rem 2rem;
  margin-bottom: 1rem;
  border-radius: 2px;
  background-color: rgba(255, 255, 255, 0.5);
  border: 1px solid #b299ff;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  /*Add a transparent border at the bottom to match the border when the input is focussed*/
  /*Otherwise the form elements will 'jump' when focus switches*/
  border-bottom: 3px solid transparent;
  /*Full width on its own line*/
  width: 90%;
  display: block;
  transition: all 1s;
}
.addTherapyBody form input:focus, .addTherapyBody form select:focus, .addTherapyBody form textarea:focus {
  /*Browser highlights a border (outline) around the input element when it has focus*/
  /*We want to remove this*/
  outline: none;
  /*This focus is important for ARIA, i.e. keyboard navigation*/
  /*Always make form elements that are focussed visible*/
  /*Give it a box shadow and a border at the bottom*/
  box-shadow: 0 1rem 2rem rgba(117, 28, 0, 0.1);
  border-bottom: 3px solid #b299ff;
  /*Apply this style when we have an invalid focussed input element*/
}
.addTherapyBody form input:focus:invalid, .addTherapyBody form select:focus:invalid, .addTherapyBody form textarea:focus:invalid {
  border-bottom: 3px solid #191970;
}
.addTherapyBody form input::placeholder, .addTherapyBody form select::placeholder, .addTherapyBody form textarea::placeholder {
  /*Target the placeholder text*/
  color: #999999;
}
.addTherapyBody form label {
  font-size: 2rem;
}
.addTherapyBody form span.helpText {
  margin-top: -3rem;
  margin-bottom: 2rem;
}
.addTherapyTitle {
  margin-bottom: 1rem;
}
.addTherapyButtons {
  margin-top: 1.3rem;
  align-self: flex-end;
}

label[for=id_course_sessions] {
  margin-top: 2rem;
}

.helptext {
  margin-bottom: 2.5rem;
  margin-top: -3rem;
}

/*===== END  Add Therapy Page  =====*/
.therapyListing {
  width: 100%;
  display: flex;
  flex-direction: column;
  margin-left: auto;
  margin-right: auto;
}
@media only screen and (min-width: 37.5em) {
  .therapyListing {
    width: 70%;
  }
}
@media only screen and (min-width: 59.375em) {
  .therapyListing {
    width: 60%;
  }
}
@media only screen and (min-width: 75em) {
  .therapyListing {
    width: 50%;
  }
}
@media only screen and (min-width: 37.5em) {
  .therapyListContainer > hr {
    width: 80%;
  }
}
@media only screen and (min-width: 59.375em) {
  .therapyListContainer > hr {
    width: 75%;
  }
}
@media only screen and (min-width: 75em) {
  .therapyListContainer > hr {
    width: 65%;
  }
}

/*~~~~~~~  404 Page  ~~~~~~~*/
.errorSection {
  background-color: #ffb299;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  min-height: 75vh;
  padding: 3rem;
}
@media only screen and (min-width: 50em) {
  .errorSection {
    min-height: 63vh;
  }
}
@media only screen and (min-width: 75em) {
  .errorSection {
    min-height: 55vh;
  }
}
.error404 {
  font-size: 10rem;
  font-weight: 100;
  color: #191970;
  margin: 3rem auto;
}
.errorSubtitle {
  color: #751c00;
}
.errorText {
  color: #e84610;
}

/*===== END  404 Page  =====*/
/*~~~~~~~  Dropdown Menu  ~~~~~~~*/
li.navigationItem {
  min-width: fit-content;
}

/* HTML Nav Styles */
menuitem {
  cursor: pointer;
  z-index: 40;
}

menu {
  display: flex;
  flex-direction: column;
}
menu.headMenu {
  flex-direction: row;
}
menu.headMenu > menuitem > a {
  padding-left: 0;
}
menu menuitem a {
  white-space: nowrap;
  display: block;
}

/*	this is the initial state of all subMenus.
 * we set it to max-height: 0, and hide the overflowed content. */
.subMenu {
  overflow: hidden;
  max-height: 0;
  transition: all 0.5s ease-out;
  background-color: #ffb299;
}
@media only screen and (min-width: 59.375em) {
  .subMenu {
    /*	Ensure the subMenu is above the rest of the page */
    position: absolute;
    z-index: 50;
  }
}
.subMenu > menuitem > a {
  border-top: 1px solid #ffcdbd;
  border-bottom: 1px solid #ff6533;
}
@media only screen and (min-width: 59.375em) {
  .subMenu > menuitem > a {
    width: 100%;
    padding-left: 1.5rem;
    padding-right: 0.5rem;
  }
}
.subMenu > menuitem > a:hover {
  background-color: #ffece5;
  border: 1px solid #ffcdbd;
}
#accountOptions + .subMenu {
  max-width: 12.3rem;
}
@media only screen and (min-width: 59.375em) {
  #accountOptions + .subMenu {
    max-width: fit-content;
  }
}
#accountOptions + .subMenu a {
  font-size: 1.2rem;
  padding-left: 0.5rem;
}
@media only screen and (min-width: 59.375em) {
  #accountOptions + .subMenu a {
    font-size: 1.7rem;
  }
}

.mainMenu {
  /* Need a bottom margin otherwise the menu is written
  * on top of the rest of the page */
}
@media only screen and (min-width: 59.375em) {
  .mainMenu {
    /*	Showing the submenu shoves the rest of the page down
    * So remove the bottom margin on the main menu to counter-act this */
  }
  .mainMenu:hover {
    margin-bottom: 0;
  }
}
.mainMenu a {
  font-size: 2.5rem;
}
@media only screen and (min-width: 59.375em) {
  .mainMenu a {
    font-size: 2.2rem;
  }
}

/*	when hovering over a .mainMenu item,
 * display the subMenu below it.
 * we're changing the subMenu's max-height from 0 to 200px; */
.mainMenu menuitem:hover .subMenu {
  /*	In the mobile view we want the "appearing" submenu to
  * shove the other main menu items down */
  display: block;
  max-height: 200px;
  width: auto;
  /*	In the desktop view we want the "appearing" submenu to
  * overlap the existing page items and not shove anything down */
}
@media only screen and (min-width: 59.375em) {
  .mainMenu menuitem:hover .subMenu {
    position: absolute;
  }
}

menu a {
  color: #751c00;
  min-width: 9rem;
  transition: background 0.5s, color 0.5s, transform 0.5s;
  margin: 0;
  text-align: left;
  padding-left: 1.5rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-right: 1rem;
  border-radius: 3px;
}

.mainMenu > menuitem {
  position: relative;
}
.mainMenu > menuitem > .subMenu {
  width: 0;
}

.dropMenu {
  /* Place an arrow underneath the mainMenu text */
}
.dropMenu:hover > menuitem::after {
  content: "";
  position: absolute;
}
@media only screen and (min-width: 59.375em) {
  .dropMenu:hover > menuitem::after {
    /* Show an arrow in desktop view */
    width: 0;
    height: 0;
    border: 8.5px solid transparent;
    border-top: 10px solid #751c00;
    top: 28px;
    /*	Show the arrow on top of the subMenu */
    z-index: 55;
  }
}
.dropMenuTopLink {
  text-align: center;
  /*	Since touch devices do not have a "hover" event
  * We need to click on the "Therapies" label to open the submenu
  * However this will activate the link and the user will never see the subMenu
  * We need to disable the pointer on the anchor in mobile view.
  * The parent menu is still clickable and will show the subMenu, but the anchor will not be activated. */
  pointer-events: none;
}
@media only screen and (min-width: 59.375em) {
  .dropMenuTopLink {
    /* Re-enable the "Therapies" anchor for non-touch screens */
    pointer-events: auto;
  }
}

/* For "search" & "My Account" dropdown */
.headMenu > menuitem > menu > menuitem {
  transition: opacity 0.6s;
  opacity: 0;
}

.headMenu > menuitem:hover > menu > menuitem,
.headMenu > menuitem.hover > menu > menuitem {
  transition: opacity 0.6s;
  opacity: 1;
}

/*===== END Dropdown Menu   =====*/
/*~~~~~~~  Button  ~~~~~~~*/
.btn {
  text-transform: uppercase;
  display: inline-block;
  padding: 1.3rem 1.8rem;
  border-radius: 10rem;
  font-size: 1.6rem;
  background-color: #ffcdbd;
  color: #751c00;
  border: 3px solid #751c00;
  text-align: center;
  transition: all 0.2s;
}
.btn:hover {
  /* Make the button pop up => 3D effect */
  transform: translateY(-0.5rem);
  /* Box Shadow X Y Blur Colour*/
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}
.btn:active {
  color: #b299ff;
  background-color: #751c00;
  /* Make the button appear to be pressed => 3D effect */
  transform: translateY(-0.1rem);
  /* Box Shadow X Y Blur Colour*/
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}
.btn:not(:last-child) {
  margin-right: 1.5rem;
}
.btnCTA {
  background-color: #b299ff;
}
.btnPrimary {
  background-color: #99ffb2;
  margin-left: auto;
  margin-right: 3rem;
}
.btnGhost {
  background-color: transparent;
}
.btnGhost:hover {
  color: #751c00;
}
.btnGhost:active {
  color: #FFFFFF;
}
.btnTextOnly {
  border: none;
  background-color: transparent;
}
.btnTextOnly:hover, .btnTextOnly:active {
  background-color: transparent;
  color: #ffcdbd;
}
.btnThin {
  /* These thin buttons have too much padding above and below
  * Override the default padding for these Buttons */
  padding-top: 0.8rem;
  padding-bottom: 0.8rem;
}
.btnStyle {
  text-decoration: none;
  text-align: center;
}
.btnStyle span {
  color: #751c00;
  padding: 0.5rem;
  margin-top: 0.5rem;
  border: 1px solid #751c00;
  border-radius: 0;
  font-weight: 700;
  transition: all 0.15s ease-in-out;
}
.btnStyle span:hover {
  background-color: #b299ff;
}
.btnStyleActive span {
  background-color: #751c00;
  color: #99ffb2;
}
.btnBackToTop {
  height: 42px;
  width: 42px;
  position: fixed;
  bottom: 10px;
  right: 10px;
  display: flex;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  border: 1px solid #000000;
  color: #000000;
  box-shadow: 0 0.125rem 0.125rem rgba(0, 0, 0, 0.075);
}
.btnBackToTop a {
  cursor: pointer;
}
.btnBackToTop a i {
  margin: auto;
}

button[class$=crementSessions] {
  background-color: #751c00;
  color: #ffcdbd;
  cursor: pointer;
  padding: 0.25rem 0.5rem;
  height: 3.75rem;
  width: 3.75rem;
}
button[class$=crementSessions]:disabled {
  background-color: #808080;
  cursor: not-allowed;
}

.incrementSessions {
  margin-left: -0.5rem;
}

.decrementSessions {
  margin-right: -0.5rem;
}

#therapyListButtons, #addTherapyButtons {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin-top: 2rem;
  align-items: center;
}
#therapyListButtons a, #therapyListButtons button, #addTherapyButtons a, #addTherapyButtons button {
  margin-right: 0;
}

.btnFile {
  background-color: #ffcdbd;
}

/*===== END  Button  =====*/
.search {
  flex: 0 0 80%;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Since the search box will appear over the header and the mobile menu,
  * both of which have different backgrounds,
  * Need to set its background to transparent */
  background-color: transparent;
  margin-right: auto;
  margin-left: auto;
  /* Last one - move all the way to the end
  * So that it will wrap onto the next row in the mobile view */
  order: 1;
}
@media only screen and (min-width: 37.5em) {
  .search {
    /* Move back inline with the rest of the top nav */
    order: 0;
    flex: 0 0 40%;
  }
}
.searchInput {
  /* Input does NOT inherit font family or size automatically */
  font-family: inherit;
  font-size: 1.6rem;
  color: inherit;
  background-color: #f4f2f2;
  /* Set to a high number to give round ends to rectangle */
  border-radius: 100px;
  /*	Add a border to make the search field show up against the light background */
  border: 1px solid #aab7c4;
  padding: 0.7rem 2rem;
  width: 90%;
  transition: all 0.2s;
  /* Move the button on top of this input  */
  margin-right: -3.25rem;
}
.searchInput:focus {
  outline: none;
  background-color: #aab7c4;
}
.searchInput:focus::placeholder {
  /*	Change the colour of the placeholder text
  * when the background gets darker
  * to ensure there is enough contrast */
  color: #333333;
}
.searchInput::placeholder {
  /* Change the colour of the placeholder text
  * to give enough contrast
  * https://www.w3schools.com/howto/howto_css_placeholder.asp */
  font-weight: 100;
  color: #999999;
}
.searchInput:focus + .searchButton {
  /* When the input gets focus
  * Change the background colour of its sibling(+) button */
  background-color: #aab7c4;
}
.searchButton {
  border: none;
  background-color: #f4f2f2;
  height: 2rem;
  width: 2rem;
  font-size: 1.4rem;
}
.searchButton:active {
  transform: translateY(2px);
}

.emptySearch {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.emptySearch h2 {
  margin-bottom: 1.5rem;
}

/*~~~~~~~  Card  ~~~~~~~*/
.therapyCard {
  display: flex;
  /* Layout card in a grid
  * https://www.youtube.com/watch?v=vQAvjof1oe4 */
  flex: 0 1 250px;
  flex-direction: column;
  position: relative;
  border-radius: 5px;
  box-shadow: 0 1.5rem 4rem rgba(25, 25, 112, 0.15);
}
.therapyCard p {
  font-size: 1.6rem;
  margin-bottom: 0.75rem;
}
.therapyCardBody {
  /* Push the cardFooter to the bottom of the card */
  flex: auto 1 1;
  padding: 0 1rem;
}
.therapyCardBody h2 {
  padding: 1rem 0;
  font-size: 2rem;
}
.therapyCardFooter {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  background-color: #ffcdbd;
  padding: 0.75rem 1rem;
  text-align: left;
  /* Since the footer hides the card's border-radius on the bottom
  * Need to set its border radius on the bottom too */
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}
.therapyCardFooter p {
  margin-bottom: 0;
  font-weight: 700;
  color: #751c00;
  opacity: 0.7;
}
.therapyCardFooter small {
  color: #999999;
}
.therapyCardFooter .bookButton {
  align-self: flex-end;
}
.therapyCardStyle {
  color: #751c00;
  font-size: 1.2rem;
  font-family: Gabriela;
}
.therapyCardStyle a {
  text-decoration-color: #999999;
  text-decoration-line: underline;
  text-decoration-style: solid;
  text-decoration-thickness: auto;
}
.therapyCardStyle a:visited, .therapyCardStyle a:link {
  color: #999999;
}
.therapyCard img {
  height: 21rem;
  /* Since the image hides the card's border-radius on the top
  * Need to set its border radius on the top too */
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

/*===== END  Card  =====*/
.sessionsInput {
  /* 7.5rem is twice the width of an increment/decrement button */
  width: 25%;
  font-size: 1.3rem;
  height: 3.75rem;
  padding: 0.25rem 0.5rem;
  line-height: 1.5;
}

.shopButtons {
  display: flex;
  flex-direction: row;
}

.formInput, .form #id_country {
  /*Always when padding an element give it a bit more on the sides to look better*/
  padding: 1.5rem 2rem;
  margin-bottom: 1rem;
  border-radius: 2px;
  background-color: rgba(255, 255, 255, 0.5);
  border: 1px solid #b299ff;
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  /*Add a transparent border at the bottom to match the border when the input is focussed */
  /*Otherwise the form elements will 'jump' when focus switches */
  border-bottom: 3px solid transparent;
  /*Full width on its own line */
  width: 90%;
  display: block;
  -webkit-transition: all 1s;
  transition: all 1s;
}
.formInput:focus, .form #id_country:focus {
  /*Browser highlights a border (outline) around the input element when it has focus*/
  /*We want to remove this*/
  outline: none;
  /*This focus is important for ARIA, i.e. keyboard navigation*/
  /*Always make form elements that are focussed visible*/
  /*Give it a box shadow and a border at the bottom*/
  box-shadow: 0 1rem 2rem rgba(117, 28, 0, 0.1);
  border-bottom: 3px solid #b299ff;
  /*Apply this style when we have an invalid focussed input element*/
}
.formInput:focus:invalid, .form #id_country:focus:invalid {
  border-bottom: 3px solid #191970;
}
.formInput::placeholder, .form #id_country::placeholder {
  /*Target the placeholder text*/
  color: #999999;
}

select, select option {
  color: #000000;
}
select:invalid, select option[value=""] {
  color: #aab7c4;
}

#saveInfo {
  margin-top: 1.3rem;
  margin-right: 4rem;
}
@media only screen and (min-width: 37.5em) {
  #saveInfo {
    margin-right: 6rem;
  }
}
@media only screen and (min-width: 50em) {
  #saveInfo {
    margin-right: 7rem;
  }
}
@media only screen and (min-width: 59.375em) {
  #saveInfo {
    margin-right: 8rem;
  }
}
@media only screen and (min-width: 75em) {
  #saveInfo {
    margin-right: 4.6rem;
  }
}
@media only screen and (min-width: 59.375em) {
  #saveInfo {
    margin-right: 4.7rem;
  }
}

/*~~~~~~~  Sort  ~~~~~~~*/
.sortRow {
  margin-top: 0.5rem;
  margin-bottom: 0.25rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  margin: 2rem 0;
}
@media only screen and (min-width: 22.5em) {
  .sortRow {
    flex-direction: row-reverse;
  }
}

/*===== END  Sort  =====*/
.toast {
  min-width: 32rem;
  max-width: 75%;
  background-color: #FFFFFF;
  color: #333;
  text-align: center;
  border-radius: 2px;
  position: fixed;
  z-index: 1;
  top: 60px;
  right: 30px;
  font-size: 17px;
  overflow: visible;
}
@media only screen and (min-width: 37.5em) {
  .toast {
    max-width: 60%;
  }
}
@media only screen and (min-width: 50em) {
  .toast {
    max-width: 50%;
  }
}
@media only screen and (min-width: 59.375em) {
  .toast {
    max-width: 40%;
  }
}
@media only screen and (min-width: 75em) {
  .toast {
    max-width: 32%;
  }
}
@media only screen and (min-width: 90em) {
  .toast {
    max-width: 25%;
  }
}
.toast button.close {
  margin-left: auto;
  background-color: transparent;
  border: none;
  font-size: 3rem;
  font-weight: 700;
  line-height: 1;
}
.toastTitle {
  display: flex;
  flex-direction: row;
  padding: 5px 8px;
}
.toastCapper {
  height: 2px;
}
.toastCapperSuccess {
  background-color: #197019;
}
.toastCapperError {
  background-color: #e84610;
}
.toastCapperWarning {
  background-color: orange;
}
.toastCapperInfo {
  background-color: #191970;
}
.toastBody {
  padding: 10px 20px;
}
.toast.show {
  visibility: visible;
  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
  animation: fadein 0.5s, fadeout 0.5s 2.5s;
}
.toastBookings {
  display: flex;
  flex-direction: row;
}
.toastBookingsImage {
  flex: 1 1 0;
  min-width: 25%;
}
.toastBookingsDetails {
  flex: 3 3 0;
}
.toastBookingsDetails p {
  margin-top: 0;
  margin-bottom: 0;
}
.toastBookingsDetails p:not(:first-child) {
  @extends .small;
}
.toastBookingsWrapper {
  height: 100px;
  /* horizontal overflow hidden */
  overflow-x: hidden;
  /* V'ertical overflow will turn into a scrollbar when the height is greater than 100 pixels */
  overflow-y: auto;
}
.toastBookingsTotal {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin: 1rem 0;
}

.messageContainer {
  position: fixed;
  top: 72px;
  right: 15px;
  z-index: 9999;
}

.greenBackground {
  background-color: #75e075;
  border: 1px solid #197019;
}

.redBackground {
  background-color: #f05522;
  border: 1px solid #e84610;
}

.blueBackground {
  background-color: #7575e0;
  border: 1px solid #191970;
}

.orangeBackground {
  background-color: #ffb733;
  border: 1px solid orange;
}

.yellowBackground {
  background-color: #fffe87;
  border: 1px solid #878600;
}

/*~~~~~~~  Table  ~~~~~~~*/
.ot4uTable tr:nth-child(odd) {
  background-color: #ffb299;
}
.ot4uTable tr:nth-child(even) {
  background-color: #ffcdbd;
}
.ot4uTable .tableHead > tr {
  background-color: #751c00;
  color: #b299ff;
}
.ot4uTable td:last-child {
  text-align: right;
}
@media only screen and (min-width: 59.375em) {
  .ot4uTable {
    margin-top: 5rem;
  }
}

#therapyListTable {
  font-size: 2rem;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
}
#therapyListTable td, #therapyListTable th {
  padding: 1rem 0;
}
@media only screen and (min-width: 37.5em) {
  #therapyListTable td, #therapyListTable th {
    padding: 1rem 1.5rem;
  }
}

/*===== END  Table  =====*/
/*~~~~~~~  Django AllAuth  ~~~~~~~*/
ul.errorlist {
  color: #e84610;
}

.allauth {
  padding: 1.5rem 2rem;
}
.allauthWrapper {
  width: 100%;
  margin-top: 2rem;
  margin-left: auto;
  margin-right: auto;
}
@media only screen and (min-width: 59.375em) {
  .allauthWrapper {
    width: 50%;
  }
}
@media only screen and (min-width: 75em) {
  .allauthWrapper {
    width: 35%;
  }
}
.allauthWrapper form.login p {
  margin-top: 0.75rem;
}
.allauthTitle {
  margin-bottom: 2rem;
  margin-top: 1.4rem;
  text-transform: uppercase;
  text-align: center;
}
.allauthFormInnerContent p {
  margin-top: 2rem;
  color: #751c00;
}
.allauthFormInnerContent a {
  color: #191970;
}
.allauthFormInnerContent input {
  border-color: #751c00;
  border-radius: 0;
  margin-bottom: 1rem;
  padding: 0.75rem 1rem;
}
.allauthFormInnerContent input::placeholder {
  color: #aab7c4;
}
.allauthFormInnerContent label:not([for=id_remember]) {
  /* Hide the labels on everything except for the remember me checkbox on the login page */
  /* since all the other inputs will have placeholders*/
  display: none;
  /* Standard Bootstrap transition */
  transistion: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
.allauthFormInnerContent label:not([for=id_remember]):hover {
  color: #b299ff;
  background-color: #333333;
  border-color: #333333;
}
.allauthSignUpFirst {
  margin-bottom: 1rem;
}

.signup {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 1.5rem 0;
}
.signupButtons {
  align-self: flex-end;
}
.signup input {
  width: 80%;
}

.emailVerifySent {
  margin-bottom: 1.5rem;
  display: flex;
  flex-direction: column;
  padding-left: 2rem;
}
.emailVerifySent a {
  margin-top: 1rem;
  align-self: flex-end;
}
.emailConfirm {
  margin-bottom: 1.5rem;
  display: flex;
  flex-direction: column;
}
.emailConfirm form {
  margin-top: 1rem;
  align-self: flex-end;
}
.emailConfirm p {
  padding: 0 2rem;
}
.emailConfirm .userName {
  font-weight: 700;
}

.loginPage {
  padding: 0 2rem;
}
.loginForm {
  display: flex;
  flex-direction: column;
  margin: 1.5rem 0;
  position: relative;
}
.loginButtons {
  align-self: flex-end;
}

#id_remember {
  /*	The checkbox for the "Remember Me" label
  * is laid out on the row after the label
  * Need to move it so it is beside its label
  * // transform: translate(0, -2rem)
  * // transform: translateY(-2rem)
  * // transform: translateX(0) */
  position: absolute;
  top: 11rem;
  left: 0;
}

label[for=id_remember] {
  padding-left: 2rem;
}

@media only screen and (min-width: 37.5em) {
  .logoutPage {
    width: 50%;
    margin-left: auto;
    margin-right: auto;
  }
}
@media only screen and (min-width: 59.375em) {
  .logoutPage {
    /* At the "notebook" size an outer div is set to 50%
    * So reset the width back to full width again */
    width: 100%;
  }
}
.logoutForm {
  display: flex;
  flex-direction: column;
}
.logoutButtons {
  margin-top: 2rem;
  align-self: flex-end;
}

.passwordResetForm {
  display: flex;
  flex-direction: column;
  margin-top: 1rem;
}
.passwordResetButtons {
  align-self: flex-end;
}
.passwordResetButtons input {
  border-radius: 10rem;
}
.passwordResetDone p {
  padding-bottom: 1rem;
}
.passwordResetKey form {
  display: flex;
  flex-direction: column;
}
.passwordResetKey form input:last-of-type {
  border-radius: 10rem;
  align-self: flex-end;
}
.passwordResetKey form input:not(:last-of-type) {
  min-width: 23rem;
  max-width: 30rem;
}
.passwordResetKeyDone {
  display: flex;
  flex-direction: column;
}
.passwordResetKeyDone a {
  margin-top: 1.5rem;
  align-self: flex-end;
}

/*===== END  Django AllAuth  =====*/
/*~~~~~~~  Stripe  ~~~~~~~*/
.StripeElement,
.stripeStyleInput {
  box-sizing: border-box;
  height: 4rem;
  padding: 1rem 1.2rem;
  border: 1px solid transparent;
  border-radius: 0px;
  background-color: #FFFFFF;
  box-shadow: 0 1px 3px 0 #e6ebf1;
  -webkit-transition: box-shadow 150ms ease;
  transition: box-shadow 150ms ease;
}

.StripeElement--focus,
.stripeStyleInput:focus,
.stripeStyleInput:active {
  box-shadow: 0 1px 3px 0 #cfd7df;
}

.StripeElement--webkit-autofill {
  background-color: #fefde5 !important;
}

.stripeStyleInput::placeholder {
  color: #aab7c4;
}

.fieldset-label {
  position: relative;
  right: 0.5rem;
}

#paymentForm .form-control,
#stripeCard {
  color: #000;
  border: 1px solid #000;
}

#stripeError {
  background-color: #ffece5;
  /*===== END  Stripe  =====*/
}

.addTherapyBody form .widgetImage {
  width: 96px;
  height: 96px;
  border-radius: 0.4rem;
  box-shadow: 2px 4px rgba(0, 0, 0, 0.075);
}
.addTherapyBody form .widgetCheckbox {
  margin-top: 0.75rem;
  min-height: 1rem;
  padding-left: 1rem;
  display: flex;
  flex-direction: row-reverse;
  align-items: center;
  justify-content: flex-end;
}
.addTherapyBody form .widgetInput {
  width: 1.5rem;
  height: 1.5rem;
  margin-top: 1rem;
}
.addTherapyBody form .widgetInput:checked ~ .widgetLabel::before {
  background-color: #e84610;
  border-color: #e84610;
  border-radius: 0;
}
.addTherapyBody form .widgetLabel {
  margin-right: 1rem;
  color: #e84610;
}
.addTherapyBody form .widgetLabel::before {
  border-radius: 0;
  border-color: #e84610;
}

#widgetFilename {
  color: #e84610;
}

.btnFile {
  position: relative;
  overflow: hidden;
  align-self: flex-start;
  margin-top: 0.75rem;
}

.btnFile input {
  position: absolute;
}

#newImage {
  opacity: 0;
}

/*~~~~~~~  MailChimp  ~~~~~~~*/
#mc_embed_signup {
  background: #ffcdbd;
  font: 14px Helvetica, Arial, sans-serif;
  width: 100%;
}
#mc_embed_signup h2 {
  margin: 1rem 0;
}
#mc_embed_signup .helper-text {
  background-color: #ffcdbd;
}
#mc_embed_signup #mce-EMAIL-HELPERTEXT {
  background-color: #ffcdbd;
}

.indicates-required {
  margin-bottom: -3rem;
}

#mc_embed_signup .helper_text {
  background-color: #ffcdbd;
}

#mc_embed_signup #mc-embedded-subscribe {
  margin-left: auto;
}


/*===== END  MailChimp  =====*/

/*# sourceMappingURL=style.css.map */